% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RGM.R
\name{RGM_cpp}
\alias{RGM_cpp}
\title{Title Fitting Reciprocal Graphical Models for Integrative Gene Regulatory Network}
\usage{
RGM_cpp(
  X,
  Y,
  A0 = NULL,
  B0 = NULL,
  D = NULL,
  a_tau = 0.1,
  b_tau = 0.1,
  a_rho = 0.5,
  b_rho = 0.5,
  nu_1 = 1e-04,
  a_eta = 0.1,
  b_eta = 0.1,
  a_psi = 0.5,
  b_psi = 0.5,
  nu_2 = 1e-04,
  a_sigma = 0.1,
  b_sigma = 0.1,
  Prop_varA = 0.1,
  Prop_VarB = 0.1,
  niter = 10000
)
}
\arguments{
\item{X}{n * k matrix data input, each row denotes a particular observation and each column denotes a particular DNA.}

\item{Y}{n * p matrix data input, each row denotes a particular observation and each column denotes a particular gene.}

\item{A0}{p * p matrix input. It is the initial value of the gene-gene interaction matrix. Diagonal entries of A0 should all be 0. Random initialization of A0 may increase the convergence time of the markov chain. Default value is NULL.}

\item{B0}{p * k matrix input. It is the initial value of the gene-DNA interaction matrix. Each row corresponds to a particular gene, each column corresponds to a particular DNA. Random initialization of B0 matrix may increase the convergence time of the markov chain. Default value is NULL.}

\item{D}{p * k indicator matrix input. Each row corresponds to a particular gene, each column corresponds to a particular DNA. An entry is 1 if the corresponding DNA can affect the corresponding gene, else 0. Default value is NULL. If not given, all entry of D is taken to be 1.}

\item{a_tau}{positive scalar input. It corresponds to the first parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{b_tau}{positive scalar input. It corresponds to the second parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{a_rho}{positive scalar input. It corresponds to the first parameter of a Beta distribution. Default value is 0.5.}

\item{b_rho}{positive scalar input. It corresponds to the first parameter of a Beta distribution. Default value is 0.5.}

\item{nu_1}{positive scalar input. It corresponds to the variance of slab part of of spike and slab distribution of A. Default value is 0.0001.}

\item{a_eta}{positive scalar input. It corresponds to the first parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{b_eta}{positive scalar input. It corresponds to the second parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{a_psi}{positive scalar input. It corresponds to the first parameter of a Beta distribution. Default value is 0.5.}

\item{b_psi}{positive scalar input. It corresponds to the first parameter of a Beta distribution. Default value is 0.5.}

\item{nu_2}{positive scalar input. It corresponds to the variance of slab part of of spike and slab distribution of B. Default value is 0.0001.}

\item{a_sigma}{positive scalar input. It corresponds to the first parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{b_sigma}{positive scalar input. It corresponds to the second parameter of a Inverse Gamma distribution. Default value is 0.1.}

\item{niter}{positive integer input. It corresponds to number of iterations the markov chain runs. Give niter as large as possible to get the convergence. Minimum value is 10,000. Default value is 10,000.}
}
\value{
A list which will hold A, B, LL:

\item{A}{p * p matrix output of Gene-Gene interactions.}
\item{B}{p * k matrix output of Gene-DNA interactions.}
\item{LL}{niter * 1 vector output of log-likelihood values of the model for all the iterations.}
}
\description{
RGM_cpp can be used to fit Reciprocal Graphical Models on gene expression data and DNA level measurements to find the relationship between different genes and the relationship between genes and DNA.
}
\examples{

# -----------------------------------------------------------------
# Example 1:

set.seed(500)

# Number of datapoints
n = 500

# Number of Genes and number of DNAs
p = 3
k = 3

# Initialize gene-gene interaction matrix
A = matrix(sample(c(-3, 3), p^2, replace = TRUE), p, p)

# Diagonal entries of A matrix will always be 0
diag(A) = 0

# Initialize gene-DNA interaction matrix
B = matrix(0, p, k)

for(i in 1:p){

  B[i, i] = sample(c(-3, 3), 1, replace = TRUE)

}

# Indicator matrix for gene-DNA interaction
D = diag(3)

Sigma = 0.5 * diag(p)

Mult_Mat = solve(diag(p) - A)

Variance = Mult_Mat \%*\% Sigma \%*\% t(Mult_Mat)

# Generate DNA expressions
X = matrix(runif(n * k, 0, 5), nrow = n, ncol = k)

Y = matrix(0, nrow = n, ncol = p)

# Generate Gene expressions data based on DNA data
for (i in 1:n) {

 Y[i, ] = MASS::mvrnorm(n = 1, Mult_Mat \%*\% B \%*\% X[i, ], Variance)

}

# Apply RGM_cpp on the generated data
Out = RGM_cpp(X, Y, A = A, B = B, D = D)

# Get gene-gene interaction matrix, gene-DNA interaction matrix and log-likelihood
A = Out$A
B = Out$B
LL = Out$LL

# Plot log-likelihood of the model at each iteration
plot(LL, type = 'l', xlab = "Number of Iterations", ylab = "Log-likelihood")

}
\references{
Ni, Y., Ji, Y., & MÃ¼ller, P. (2018).
Reciprocal graphical models for integrative gene regulatory network analysis.
\emph{Bayesian Analysis},
\strong{13(4)}, 1095-1110.
\doi{10.1214/17-BA1087}.
}
